/**
* AsignaturaImpartida.java
* guardians-dashboard
* 16/4/2015 18:43:14
* Copyright David
* com.app.domain.model.types
*/
package com.app.domain.model.types;

import javax.persistence.ManyToOne;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;

import org.junit.Assert;

/**
 * @author David
 *
 */
public class Materia {

	private Asignatura asignatura;
	
	private Curso curso;
	
	private CursoAcademico cursoAcademico;
	
	/**
	 * Profesor que imparte la asignatura
	 */
	private Profesor profesor;
	
	/**
	 * A침ade un criterio de evaluaci칩n a la asignatura
	 * 
	 * @author David Romero Alcaide
	 * @param item
	 * @param porcentaje
	 */
	public void addCriterioDeEvaluacion(Class<? extends ItemEvaluable> item, int porcentaje) {
		final int barrera1 = 101;
		final int barrera2 = 100;
		final int barrera3 = -1;
		Assert.assertTrue(porcentaje > barrera3 && porcentaje < barrera1);
		Assert.assertFalse(obtenerSumaPorcentajes() + porcentaje > barrera2);
		this.criteriosDeEvaluacion.put(item, porcentaje);
	}

	/**
	 * Elimina un criterio de evaluaci칩n
	 * 
	 * @author David Romero Alcaide
	 * @param item
	 */
	public void removeCriterioDeEvaluacion(Class<? extends ItemEvaluable>   item) {
		Assert.assertTrue(this.criteriosDeEvaluacion.containsKey(item));
		this.criteriosDeEvaluacion.remove(item);
	}

	/**
	 * Obtiene la suma de los porcentajes de los criterios de evaluaci칩n
	 */
	private int obtenerSumaPorcentajes() {
		int sumaPorcentajes = 0;
		for (Integer porcentajes : this.criteriosDeEvaluacion.values()) {
			sumaPorcentajes = sumaPorcentajes + porcentajes;
		}
		return sumaPorcentajes;
	}
	
	@Valid
	@NotNull
	@ManyToOne(optional = false)
	/**
	 * @return the profesor
	 */
	public Profesor getProfesor() {
		return profesor;
	}

	/**
	 * @param profesor
	 *            the profesor to set
	 */
	public void setProfesor(Profesor profesor) {
		this.profesor = profesor;
	}
	
}
